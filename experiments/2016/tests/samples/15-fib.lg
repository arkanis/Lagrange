// output: 832040

/**
performance comparison (in ms):
fib.lg:      46  47  45  44  42 =   ~45ms =  1.0x
fib.c:       29  31  32  30  31 =   ~31ms =  0.7x (gcc version 4.8.4)
fib.c (O2):  29  24  26  27  23 =   ~26ms =  0.6x (gcc version 4.8.4 with -O2)
fib.rb:     286 287 293 293 287 =  ~289ms =  6.4x (ruby 2.0.0p384)
fib.php:    793 767 768 780 774 =  ~776ms = 17.2x (PHP 5.5.9-1ubuntu4.14)
**/

func main {
	var result = fib(30)
	print_num(result)
	//syscall(1, 1, "\n", 1)
	
	syscall(60, 0)
}

func fib in(int n) out(int res) {
	/*
	syscall(1, 1, "fib: ", 5)
	print_decimal(n)
	syscall(1, 1, "\n", 1)
	*/
	
	if (n == 0)
		res = 0
	else {
		if (n == 1)
			res = 1
		else {
			res = fib(n - 1) + fib(n - 2)
		}
	}
}

func print_num in(int n) {
	if (n > 9)
		print_num(n / 10)
	print_decimal(n % 10)
}

func print_decimal in(int n) {
	if n == 0
		syscall(1, 1, "0", 1)
	else if n == 1
		syscall(1, 1, "1", 1)
	else if n == 2
		syscall(1, 1, "2", 1)
	else if n == 3
		syscall(1, 1, "3", 1)
	else if n == 4
		syscall(1, 1, "4", 1)
	else if n == 5
		syscall(1, 1, "5", 1)
	else if n == 6
		syscall(1, 1, "6", 1)
	else if n == 7
		syscall(1, 1, "7", 1)
	else if n == 8
		syscall(1, 1, "8", 1)
	else if n == 9
		syscall(1, 1, "9", 1)
}